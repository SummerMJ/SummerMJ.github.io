<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Summer</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-28T05:45:58.881Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在自己的网站上调别人https的服务</title>
    <link href="http://yoursite.com/2020/04/28/2020-04-1/"/>
    <id>http://yoursite.com/2020/04/28/2020-04-1/</id>
    <published>2020-04-28T02:49:00.000Z</published>
    <updated>2020-04-28T05:45:58.881Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>一般情况下,在自己的网站上调别人的https服务会报这个错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unable to find valid certification path to requested target</span><br></pre></td></tr></table></figure><p>这提示我们要安装该网站的证书了</p><h2 id="下载证书"><a href="#下载证书" class="headerlink" title="下载证书"></a>下载证书</h2><p>第一步是要下载证书<br>去你程序要访问的网站，点击那个锁按钮，并点击查看详情（chrome浏览器）</p><img src="/2020/04/28/2020-04-1/blog-1.png" class="" title="证书"><p>然后</p><img src="/2020/04/28/2020-04-1/blog-2.png" class="" title="证书"><p>切换到Base64</p><img src="/2020/04/28/2020-04-1/blog-3.png" class="" title="证书"><p>最后导出证书文件</p><h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><p>切换到jre的目录下,一般Centos会在这个位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_181&#x2F;jre&#x2F;lib&#x2F;security&#x2F;</span><br></pre></td></tr></table></figure><p>导入证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -import -alias abc -keystore cacerts -file &#x2F;cert&#x2F;abc.cer</span><br></pre></td></tr></table></figure><p>其中:</p><p><code>-alias</code> 指定别名(推荐和证书同名)</p><p><code>-keystore</code> 指定存储文件(此处固定)</p><p><code>-file</code> 指定证书文件全路径(证书文件所在的目录)</p><p>这行命令回车之后会叫你输一个密码</p><p>敲入<code>changeit</code>即可,这是java中cacerts证书库的默认密码</p><p>是否信任证书,输入<code>Y</code>然后回车.搞定!</p><p>然后查看一下证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -keystore cacerts -alias vbooking</span><br></pre></td></tr></table></figure><h2 id="如果证书过期了怎么办"><a href="#如果证书过期了怎么办" class="headerlink" title="如果证书过期了怎么办"></a>如果证书过期了怎么办</h2><p>首先还是先进入到jre的目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_181&#x2F;jre&#x2F;lib&#x2F;security&#x2F;</span><br></pre></td></tr></table></figure><p>先把文件夹目录里面的证书文件删除, 然后执行删除证书命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -delete -alias abc -keystore cacerts</span><br></pre></td></tr></table></figure><p>(这里的<code>abc</code>是证书的别名)</p><p>最后再重新执行一个导入证书的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -import -alias abc -keystore cacerts -file &#x2F;cert&#x2F;abc.cer</span><br></pre></td></tr></table></figure><p>至此证书导入就结束了,就可以愉快的用https的服务啦</p><h2 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h2><p>证书导入成功之后,需要把后端的服务重新跑一下. Over~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;一般情况下,在自己的网站上调别人的https服务会报这个错误&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;ta
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue全局Bus</title>
    <link href="http://yoursite.com/2020/03/12/2020-03-1/"/>
    <id>http://yoursite.com/2020/03/12/2020-03-1/</id>
    <published>2020-03-12T05:49:28.000Z</published>
    <updated>2020-04-28T05:50:25.923Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Vue组件嵌套太深，要实现组件之间的通信，又因项目太小不想用Vuex怎么办，来一起写一个Vue全局Bus吧。"><a href="#Vue组件嵌套太深，要实现组件之间的通信，又因项目太小不想用Vuex怎么办，来一起写一个Vue全局Bus吧。" class="headerlink" title="Vue组件嵌套太深，要实现组件之间的通信，又因项目太小不想用Vuex怎么办，来一起写一个Vue全局Bus吧。"></a>Vue组件嵌套太深，要实现组件之间的通信，又因项目太小不想用Vuex怎么办，来一起写一个Vue全局Bus吧。</h4><p>众所周知，一个中央事件总线bus，我们可以用来解决兄弟组件和嵌套很多层的组件之间的通信问题，一个页面 一个页面的引入又太麻烦，直接写一个Vue插件全局引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> install = <span class="function">(<span class="params">Vue</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> Bus = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">on (event, ...args) &#123;</span><br><span class="line"><span class="keyword">this</span>.$on(event, ...args);</span><br><span class="line">&#125;,</span><br><span class="line">emit (event, callback) &#123;</span><br><span class="line"><span class="keyword">this</span>.$emit(event, callback);</span><br><span class="line">&#125;,</span><br><span class="line">off (event, callback) &#123;</span><br><span class="line"><span class="keyword">this</span>.$off(event, callback);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">Vue.prototype.$bus = Bus;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> install;</span><br></pre></td></tr></table></figure><p>然后把这个js文件在main.js引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Bus <span class="keyword">from</span> <span class="string">"./libs/bus"</span>;</span><br><span class="line">Vue.use(Bus); <span class="comment">// 让插件可以使用vue</span></span><br></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>首先我们创建一个组件center.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">name: <span class="string">"center"</span>,</span><br><span class="line">methods: &#123;</span><br><span class="line">handlerAdd () &#123;</span><br><span class="line"><span class="keyword">this</span>.$bus.emit(<span class="string">"add"</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再创建一个组件right.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">name: <span class="string">"center"</span>,</span><br><span class="line">created () &#123;</span><br><span class="line"><span class="keyword">this</span>.$bus.on(<span class="string">"add"</span>, num =&gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里需要注意的是on事件最好在created钩子函数里面执行，如果放在mounted钩子函数里面可能接收不到其他组件在created钩子里面触发的事件。</p><p>只是刚才那样的写话，当你组件销毁了再次创建组件，就会执行两次on的回调，以此类推，所以我们需要在适当的时间摧毁他。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">name: <span class="string">"center"</span>,</span><br><span class="line">methods: &#123;</span><br><span class="line">handlerNum (num) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(num)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">created () &#123;</span><br><span class="line"><span class="keyword">this</span>.$bus.on(<span class="string">"add"</span>, <span class="keyword">this</span>.handlerNum);</span><br><span class="line">&#125;,</span><br><span class="line">beforeDestory() &#123;</span><br><span class="line"><span class="keyword">this</span>.$bus.off(<span class="string">"add"</span>, <span class="keyword">this</span>.handlerNum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样每次只会执行一次了。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>在我们平时的项目中，项目不是很复杂的情况下，我推荐用全局bus来处理兄弟组件和嵌套较深的组件之间的通信问题，项目太小引入Vuex太麻烦，有点大材小用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Vue组件嵌套太深，要实现组件之间的通信，又因项目太小不想用Vuex怎么办，来一起写一个Vue全局Bus吧。&quot;&gt;&lt;a href=&quot;#Vue组件嵌套太深，要实现组件之间的通信，又因项目太小不想用Vuex怎么办，来一起写一个Vue全局Bus吧。&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Vue" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>我们为什么要前后端分离</title>
    <link href="http://yoursite.com/2020/01/07/2020-01-09_1/"/>
    <id>http://yoursite.com/2020/01/07/2020-01-09_1/</id>
    <published>2020-01-07T02:49:00.000Z</published>
    <updated>2020-04-28T05:45:58.879Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h2&gt;
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>为啥搞这玩意</title>
    <link href="http://yoursite.com/2020/01/07/first-blog/"/>
    <id>http://yoursite.com/2020/01/07/first-blog/</id>
    <published>2020-01-07T02:39:00.000Z</published>
    <updated>2020-01-07T02:46:48.395Z</updated>
    
    <content type="html"><![CDATA[<p> 在2019年6月份的时候我干程序员三年了，做的东西不好，总结的太少了，所以搞一个博客记录一些东西，不仅是工作上，生活中也要写。</p><p> 嗯，第一篇，简单说一下，以后每周至少写一次，以前没有写作的习惯，感觉不从下手，慢慢来吧。</p><p> 散会！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 在2019年6月份的时候我干程序员三年了，做的东西不好，总结的太少了，所以搞一个博客记录一些东西，不仅是工作上，生活中也要写。&lt;/p&gt;
&lt;p&gt; 嗯，第一篇，简单说一下，以后每周至少写一次，以前没有写作的习惯，感觉不从下手，慢慢来吧。&lt;/p&gt;
&lt;p&gt; 散会！&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
