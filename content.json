{"meta":{"title":"Summer","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于作者","date":"2020-04-28T06:57:07.456Z","updated":"2020-04-28T06:57:07.456Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"个人简介 姓名: 杨凌超 性别: 男 年龄: 25 手机号: 13648891564 邮箱: summeraric@163.com"},{"title":"分类","date":"2020-04-28T05:44:31.480Z","updated":"2020-04-28T05:44:31.480Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"书单","date":"2020-01-06T09:04:19.215Z","updated":"2020-01-06T09:04:19.215Z","comments":false,"path":"books/index.html","permalink":"http://yoursite.com/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-01-06T09:04:19.215Z","updated":"2020-01-06T09:04:19.215Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-01-06T09:04:19.215Z","updated":"2020-01-06T09:04:19.215Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"在自己的网站上调别人https的服务","slug":"2020-04-1","date":"2020-04-28T02:49:00.000Z","updated":"2020-04-28T05:45:58.881Z","comments":true,"path":"2020/04/28/2020-04-1/","link":"","permalink":"http://yoursite.com/2020/04/28/2020-04-1/","excerpt":"","text":"问题一般情况下,在自己的网站上调别人的https服务会报这个错误 1unable to find valid certification path to requested target 这提示我们要安装该网站的证书了 下载证书第一步是要下载证书去你程序要访问的网站，点击那个锁按钮，并点击查看详情（chrome浏览器） 然后 切换到Base64 最后导出证书文件 安装证书切换到jre的目录下,一般Centos会在这个位置 1cd &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_181&#x2F;jre&#x2F;lib&#x2F;security&#x2F; 导入证书 1keytool -import -alias abc -keystore cacerts -file &#x2F;cert&#x2F;abc.cer 其中: -alias 指定别名(推荐和证书同名) -keystore 指定存储文件(此处固定) -file 指定证书文件全路径(证书文件所在的目录) 这行命令回车之后会叫你输一个密码 敲入changeit即可,这是java中cacerts证书库的默认密码 是否信任证书,输入Y然后回车.搞定! 然后查看一下证书 1keytool -list -keystore cacerts -alias vbooking 如果证书过期了怎么办首先还是先进入到jre的目录下 1cd &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_181&#x2F;jre&#x2F;lib&#x2F;security&#x2F; 先把文件夹目录里面的证书文件删除, 然后执行删除证书命令 1keytool -delete -alias abc -keystore cacerts (这里的abc是证书的别名) 最后再重新执行一个导入证书的命令 1keytool -import -alias abc -keystore cacerts -file &#x2F;cert&#x2F;abc.cer 至此证书导入就结束了,就可以愉快的用https的服务啦 完结证书导入成功之后,需要把后端的服务重新跑一下. Over~","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[]},{"title":"Vue全局Bus","slug":"2020-03-1","date":"2020-03-12T05:49:28.000Z","updated":"2020-04-28T05:50:25.923Z","comments":true,"path":"2020/03/12/2020-03-1/","link":"","permalink":"http://yoursite.com/2020/03/12/2020-03-1/","excerpt":"","text":"Vue组件嵌套太深，要实现组件之间的通信，又因项目太小不想用Vuex怎么办，来一起写一个Vue全局Bus吧。众所周知，一个中央事件总线bus，我们可以用来解决兄弟组件和嵌套很多层的组件之间的通信问题，一个页面 一个页面的引入又太麻烦，直接写一个Vue插件全局引入。 1234567891011121314151617const install = (Vue) =&gt; &#123; const Bus = new Vue(&#123; methods: &#123; on (event, ...args) &#123; this.$on(event, ...args); &#125;, emit (event, callback) &#123; this.$emit(event, callback); &#125;, off (event, callback) &#123; this.$off(event, callback); &#125; &#125; &#125;) Vue.prototype.$bus = Bus;&#125;export default install; 然后把这个js文件在main.js引入 12import Bus from \"./libs/bus\";Vue.use(Bus); // 让插件可以使用vue 例子首先我们创建一个组件center.vue 12345678export default &#123; name: \"center\", methods: &#123; handlerAdd () &#123; this.$bus.emit(\"add\", 1); &#125; &#125;&#125; 然后再创建一个组件right.vue 12345678export default &#123; name: \"center\", created () &#123; this.$bus.on(\"add\", num =&gt; &#123; console.log(num); &#125;) &#125;&#125; 这里需要注意的是on事件最好在created钩子函数里面执行，如果放在mounted钩子函数里面可能接收不到其他组件在created钩子里面触发的事件。 只是刚才那样的写话，当你组件销毁了再次创建组件，就会执行两次on的回调，以此类推，所以我们需要在适当的时间摧毁他。 1234567891011121314export default &#123; name: \"center\", methods: &#123; handlerNum (num) &#123; console.log(num) &#125; &#125;, created () &#123; this.$bus.on(\"add\", this.handlerNum); &#125;, beforeDestory() &#123; this.$bus.off(\"add\", this.handlerNum); &#125;&#125; 这样每次只会执行一次了。 结语在我们平时的项目中，项目不是很复杂的情况下，我推荐用全局bus来处理兄弟组件和嵌套较深的组件之间的通信问题，项目太小引入Vuex太麻烦，有点大材小用了。","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"},{"name":"Vue","slug":"前端/Vue","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/Vue/"}],"tags":[]},{"title":"我们为什么要前后端分离","slug":"2020-01-09_1","date":"2020-01-07T02:49:00.000Z","updated":"2020-04-28T05:45:58.879Z","comments":true,"path":"2020/01/07/2020-01-09_1/","link":"","permalink":"http://yoursite.com/2020/01/07/2020-01-09_1/","excerpt":"","text":"前端","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[]},{"title":"为啥搞这玩意","slug":"first-blog","date":"2020-01-07T02:39:00.000Z","updated":"2020-01-07T02:46:48.395Z","comments":true,"path":"2020/01/07/first-blog/","link":"","permalink":"http://yoursite.com/2020/01/07/first-blog/","excerpt":"","text":"在2019年6月份的时候我干程序员三年了，做的东西不好，总结的太少了，所以搞一个博客记录一些东西，不仅是工作上，生活中也要写。 嗯，第一篇，简单说一下，以后每周至少写一次，以前没有写作的习惯，感觉不从下手，慢慢来吧。 散会！","categories":[],"tags":[]}]}